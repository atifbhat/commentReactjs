[{"C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\index.js":"1","C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\App.js":"2","C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\reportWebVitals.js":"3","C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\comments\\Comments.js":"4","C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\comments\\CommentForm.js":"5","C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\comments\\Comment.js":"6","C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\api.js":"7"},{"size":535,"mtime":1656240784000,"results":"8","hashOfConfig":"9"},{"size":1453,"mtime":1656251530601,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1656240784000,"results":"11","hashOfConfig":"9"},{"size":2679,"mtime":1656240784000,"results":"12","hashOfConfig":"9"},{"size":930,"mtime":1656240784000,"results":"13","hashOfConfig":"9"},{"size":3255,"mtime":1656240784000,"results":"14","hashOfConfig":"9"},{"size":1253,"mtime":1656240784000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1stp3tk",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\index.js",[],["32","33"],"C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\App.js",[],"C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\reportWebVitals.js",[],"C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\comments\\Comments.js",[],"C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\comments\\CommentForm.js",[],"C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\comments\\Comment.js",["34"],"import CommentForm from \"./CommentForm\";\n\nconst Comment = ({\n  comment,\n  replies,\n  setActiveComment,\n  activeComment,\n  updateComment,\n  deleteComment,\n  addComment,\n  parentId = null,\n  currentUserId,\n}) => {\n  const isEditing =\n    activeComment &&\n    activeComment.id === comment.id &&\n    activeComment.type === \"editing\";\n  const isReplying =\n    activeComment &&\n    activeComment.id === comment.id &&\n    activeComment.type === \"replying\";\n  const fiveMinutes = 300000;\n  const timePassed = new Date() - new Date(comment.createdAt) > fiveMinutes;\n  const canDelete =\n    currentUserId === comment.userId && replies.length === 0 && !timePassed;\n  const canReply = Boolean(currentUserId);\n  const canEdit = currentUserId === comment.userId && !timePassed;\n  const replyId = parentId ? parentId : comment.id;\n  const createdAt = new Date(comment.createdAt).toLocaleDateString();\n  return (\n    <div key={comment.id} className=\"comment\">\n      <div className=\"comment-image-container\">\n        <img src=\"/user-icon.png\" />\n      </div>\n      <div className=\"comment-right-part\">\n        <div className=\"comment-content\">\n          <div className=\"comment-author\">{comment.username}</div>\n          <div>{createdAt}</div>\n        </div>\n        {!isEditing && <div className=\"comment-text\">{comment.body}</div>}\n        {isEditing && (\n          <CommentForm\n            submitLabel=\"Update\"\n            hasCancelButton\n            initialText={comment.body}\n            handleSubmit={(text) => updateComment(text, comment.id)}\n            handleCancel={() => {\n              setActiveComment(null);\n            }}\n          />\n        )}\n        <div className=\"comment-actions\">\n          {canReply && (\n            <div\n              className=\"comment-action\"\n              onClick={() =>\n                setActiveComment({ id: comment.id, type: \"replying\" })\n              }\n            >\n              Reply\n            </div>\n          )}\n          {canEdit && (\n            <div\n              className=\"comment-action\"\n              onClick={() =>\n                setActiveComment({ id: comment.id, type: \"editing\" })\n              }\n            >\n              Edit\n            </div>\n          )}\n          {canDelete && (\n            <div\n              className=\"comment-action\"\n              onClick={() => deleteComment(comment.id)}\n            >\n              Delete\n            </div>\n          )}\n        </div>\n        {isReplying && (\n          <CommentForm\n            submitLabel=\"Reply\"\n            handleSubmit={(text) => addComment(text, replyId)}\n          />\n        )}\n        {replies.length > 0 && (\n          <div className=\"replies\">\n            {replies.map((reply) => (\n              <Comment\n                comment={reply}\n                key={reply.id}\n                setActiveComment={setActiveComment}\n                activeComment={activeComment}\n                updateComment={updateComment}\n                deleteComment={deleteComment}\n                addComment={addComment}\n                parentId={comment.id}\n                replies={[]}\n                currentUserId={currentUserId}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;","C:\\Users\\Atif\\Desktop\\article-comment-article-comment\\src\\api.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":33,"column":9,"nodeType":"41","endLine":33,"endColumn":37},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]